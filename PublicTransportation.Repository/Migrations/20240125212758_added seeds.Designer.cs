// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PublicTransportation.Infra.Context;

namespace PublicTransportation.Infra.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240125212758_added seeds")]
    partial class addedseeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PublicTransportation.Models.Line", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Line");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "6030-10 UNISA-CAMPUS 1 / TERM. STO. AMARO"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Models.LineStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<long>("StopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.HasIndex("StopId");

                    b.ToTable("LineStop");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LineId = 1L,
                            StopId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            LineId = 1L,
                            StopId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            LineId = 1L,
                            StopId = 3L
                        });
                });

            modelBuilder.Entity("PublicTransportation.Models.Stop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stop");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Latitude = -23.742760700000002,
                            Longitude = -46.711070300000003,
                            Name = "AV. CARLOS OBERHUBER"
                        },
                        new
                        {
                            Id = 2L,
                            Latitude = -23.743522299999999,
                            Longitude = -46.705872800000002,
                            Name = "PÇA. JOSÉ BOEMER ROSCHEL"
                        },
                        new
                        {
                            Id = 3L,
                            Latitude = -23.737659600000001,
                            Longitude = -46.704855799999997,
                            Name = "R. RUBEM SOUTO DE ARAÚJO"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Models.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LineId = 1L,
                            Model = "Torino",
                            Name = "Marcopolo Torino"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Models.VehiclePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("VehiclePosition");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Latitude = -23.742760700000002,
                            Longitude = -46.711070300000003,
                            VehicleId = 1L
                        });
                });

            modelBuilder.Entity("PublicTransportation.Models.LineStop", b =>
                {
                    b.HasOne("PublicTransportation.Models.Line", "Line")
                        .WithMany("LinesStops")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportation.Models.Stop", "Stop")
                        .WithMany("LinesStops")
                        .HasForeignKey("StopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("PublicTransportation.Models.Vehicle", b =>
                {
                    b.HasOne("PublicTransportation.Models.Line", "Line")
                        .WithMany("Vehicles")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("PublicTransportation.Models.VehiclePosition", b =>
                {
                    b.HasOne("PublicTransportation.Models.Vehicle", "Vehicle")
                        .WithOne("Position")
                        .HasForeignKey("PublicTransportation.Models.VehiclePosition", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("PublicTransportation.Models.Line", b =>
                {
                    b.Navigation("LinesStops");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("PublicTransportation.Models.Stop", b =>
                {
                    b.Navigation("LinesStops");
                });

            modelBuilder.Entity("PublicTransportation.Models.Vehicle", b =>
                {
                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
