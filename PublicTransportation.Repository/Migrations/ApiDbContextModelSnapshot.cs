// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PublicTransportation.Infra.Context;

#nullable disable

namespace PublicTransportation.Infra.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Line", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Line");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "6030-10 UNISA-CAMPUS 1 / TERM. STO. AMARO"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.LineStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<long>("StopId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.HasIndex("StopId");

                    b.ToTable("LineStop");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LineId = 1L,
                            StopId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            LineId = 1L,
                            StopId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            LineId = 1L,
                            StopId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            LineId = 1L,
                            StopId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            LineId = 1L,
                            StopId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            LineId = 1L,
                            StopId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            LineId = 1L,
                            StopId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            LineId = 1L,
                            StopId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            LineId = 1L,
                            StopId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            LineId = 1L,
                            StopId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            LineId = 1L,
                            StopId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            LineId = 1L,
                            StopId = 12L
                        },
                        new
                        {
                            Id = 13L,
                            LineId = 1L,
                            StopId = 13L
                        },
                        new
                        {
                            Id = 14L,
                            LineId = 1L,
                            StopId = 14L
                        },
                        new
                        {
                            Id = 15L,
                            LineId = 1L,
                            StopId = 15L
                        },
                        new
                        {
                            Id = 16L,
                            LineId = 1L,
                            StopId = 16L
                        },
                        new
                        {
                            Id = 17L,
                            LineId = 1L,
                            StopId = 17L
                        },
                        new
                        {
                            Id = 18L,
                            LineId = 1L,
                            StopId = 18L
                        },
                        new
                        {
                            Id = 19L,
                            LineId = 1L,
                            StopId = 19L
                        },
                        new
                        {
                            Id = 20L,
                            LineId = 1L,
                            StopId = 20L
                        });
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Stop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stop");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Latitude = -23.742760700000002,
                            Longitude = -46.711070300000003,
                            Name = "AV. CARLOS OBERHUBER"
                        },
                        new
                        {
                            Id = 2L,
                            Latitude = -23.743522299999999,
                            Longitude = -46.705872800000002,
                            Name = "PÇA. JOSÉ BOEMER ROSCHEL"
                        },
                        new
                        {
                            Id = 3L,
                            Latitude = -23.737659600000001,
                            Longitude = -46.704855799999997,
                            Name = "R. RUBEM SOUTO DE ARAÚJO"
                        },
                        new
                        {
                            Id = 4L,
                            Latitude = -23.482340000000001,
                            Longitude = -46.429929999999999,
                            Name = "R. MANOEL DE LIMA"
                        },
                        new
                        {
                            Id = 5L,
                            Latitude = -23.59976,
                            Longitude = -46.854460000000003,
                            Name = "R. INDOCHINA"
                        },
                        new
                        {
                            Id = 6L,
                            Latitude = -23.727979999999999,
                            Longitude = -46.711390000000002,
                            Name = "R. JOSÉ LUÍS MONTEIRO"
                        },
                        new
                        {
                            Id = 7L,
                            Latitude = -23.729880000000001,
                            Longitude = -46.708849999999998,
                            Name = "R. CAROLINA MICHAELIS"
                        },
                        new
                        {
                            Id = 8L,
                            Latitude = -23.732389999999999,
                            Longitude = -46.708860000000001,
                            Name = "R. PROF. ENÉAS DE SIQUEIRA NETO"
                        },
                        new
                        {
                            Id = 9L,
                            Latitude = -23.62613,
                            Longitude = -46.689399999999999,
                            Name = "R. JOSÉ SOLANA"
                        },
                        new
                        {
                            Id = 10L,
                            Latitude = -23.725549999999998,
                            Longitude = -46.712060000000001,
                            Name = "R. FREDERICO RENÉ DE JAEGHER"
                        },
                        new
                        {
                            Id = 11L,
                            Latitude = -23.276689999999999,
                            Longitude = -47.277200000000001,
                            Name = "AV. SEN. TEOTÔNIO VILELA"
                        },
                        new
                        {
                            Id = 12L,
                            Latitude = -23.598839999999999,
                            Longitude = -46.693460000000002,
                            Name = "AV. DAS NAÇÕES UNIDAS (MARGINAL PINHEIROS)"
                        },
                        new
                        {
                            Id = 13L,
                            Latitude = -23.664940000000001,
                            Longitude = -46.706569999999999,
                            Name = "R. CRISTALINO ROLIM DE FREITAS"
                        },
                        new
                        {
                            Id = 14L,
                            Latitude = -23.664870000000001,
                            Longitude = -46.705190000000002,
                            Name = "R. OTÁVIO CASTRO FILHO"
                        },
                        new
                        {
                            Id = 15L,
                            Latitude = -23.669229999999999,
                            Longitude = -46.703290000000003,
                            Name = "R. GALENO DE CASTRO"
                        },
                        new
                        {
                            Id = 16L,
                            Latitude = -23.663060000000002,
                            Longitude = -46.707520000000002,
                            Name = "AV. VÍTOR MANZINI"
                        },
                        new
                        {
                            Id = 17L,
                            Latitude = -23.66113,
                            Longitude = -46.705739999999999,
                            Name = "PÇA. D. FRANCISCO DE SOUZA"
                        },
                        new
                        {
                            Id = 18L,
                            Latitude = -23.55049,
                            Longitude = -46.639069999999997,
                            Name = "AL. STO. AMARO"
                        },
                        new
                        {
                            Id = 19L,
                            Latitude = -23.652339999999999,
                            Longitude = -46.707819999999998,
                            Name = "R. PAULO EIRÓ"
                        },
                        new
                        {
                            Id = 20L,
                            Latitude = -23.654730000000001,
                            Longitude = -46.71293,
                            Name = "AV. PE. JOSÉ MARIA"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LineId = 1L,
                            Model = "Torino",
                            Name = "Marcopolo Torino"
                        });
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.VehiclePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("VehiclePosition");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Latitude = -23.742760700000002,
                            Longitude = -46.711070300000003,
                            VehicleId = 1L
                        });
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.LineStop", b =>
                {
                    b.HasOne("PublicTransportation.Domain.Entities.Line", "Line")
                        .WithMany("LinesStops")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportation.Domain.Entities.Stop", "Stop")
                        .WithMany("LinesStops")
                        .HasForeignKey("StopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Vehicle", b =>
                {
                    b.HasOne("PublicTransportation.Domain.Entities.Line", "Line")
                        .WithMany("Vehicles")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.VehiclePosition", b =>
                {
                    b.HasOne("PublicTransportation.Domain.Entities.Vehicle", "Vehicle")
                        .WithOne("Position")
                        .HasForeignKey("PublicTransportation.Domain.Entities.VehiclePosition", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Line", b =>
                {
                    b.Navigation("LinesStops");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Stop", b =>
                {
                    b.Navigation("LinesStops");
                });

            modelBuilder.Entity("PublicTransportation.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Position")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
