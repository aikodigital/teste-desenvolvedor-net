// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TransportePublico.Infra.Contexts;

#nullable disable

namespace TransportePublico.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TransportePublico.Domain.Entity.Linhas.Linha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Linhas");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Paradas.Parada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<long>("LinhaId")
                        .HasColumnType("bigint");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LinhaId");

                    b.ToTable("Paradas");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.PosicoesVeiculos.PosicaoVeiculo", b =>
                {
                    b.Property<long>("PosicaoVeiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PosicaoVeiculoId"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("PosicaoVeiculoId");

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("PosicoesVeiculos");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Veiculos.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("LinhaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Modelo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LinhaId");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Paradas.Parada", b =>
                {
                    b.HasOne("TransportePublico.Domain.Entity.Linhas.Linha", "Linha")
                        .WithMany("Paradas")
                        .HasForeignKey("LinhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linha");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.PosicoesVeiculos.PosicaoVeiculo", b =>
                {
                    b.HasOne("TransportePublico.Domain.Entity.Veiculos.Veiculo", "Veiculo")
                        .WithOne("PosicaoVeiculo")
                        .HasForeignKey("TransportePublico.Domain.Entity.PosicoesVeiculos.PosicaoVeiculo", "VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Veiculos.Veiculo", b =>
                {
                    b.HasOne("TransportePublico.Domain.Entity.Linhas.Linha", "Linha")
                        .WithMany("Veiculos")
                        .HasForeignKey("LinhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linha");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Linhas.Linha", b =>
                {
                    b.Navigation("Paradas");

                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("TransportePublico.Domain.Entity.Veiculos.Veiculo", b =>
                {
                    b.Navigation("PosicaoVeiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
