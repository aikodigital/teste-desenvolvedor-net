// <auto-generated />
using AikoDigital.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AikoDigital.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AikoDigital.Models.Linha", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Linhas");
                });

            modelBuilder.Entity("AikoDigital.Models.LinhaParada", b =>
                {
                    b.Property<long>("LinhaId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParadaId")
                        .HasColumnType("bigint");

                    b.HasKey("LinhaId", "ParadaId");

                    b.HasIndex("ParadaId");

                    b.ToTable("LinhaParadas");
                });

            modelBuilder.Entity("AikoDigital.Models.Parada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Paradas");
                });

            modelBuilder.Entity("AikoDigital.Models.PosicaoVeiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<long>("VeiculoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("PosicaoVeiculos");
                });

            modelBuilder.Entity("AikoDigital.Models.Veiculo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("LinhaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("AikoDigital.Models.LinhaParada", b =>
                {
                    b.HasOne("AikoDigital.Models.Linha", "Linhas")
                        .WithMany("Paradas")
                        .HasForeignKey("LinhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AikoDigital.Models.Parada", "Paradas")
                        .WithMany("Linhas")
                        .HasForeignKey("ParadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linhas");

                    b.Navigation("Paradas");
                });

            modelBuilder.Entity("AikoDigital.Models.Linha", b =>
                {
                    b.Navigation("Paradas");
                });

            modelBuilder.Entity("AikoDigital.Models.Parada", b =>
                {
                    b.Navigation("Linhas");
                });
#pragma warning restore 612, 618
        }
    }
}
